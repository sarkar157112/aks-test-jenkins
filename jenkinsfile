pipeline {
    agent any
    environment {
        DOCKER_REGISTRY = 'myacr123test.azurecr.io' 
        DOCKER_IMAGE = 'myapp' 
        GIT_REPO_URL = 'https://github.com/sarkar157112/aks-test-jenkins.git'
        IMAGE_TAG = "${env.BUILD_NUMBER}_${new Date().format('ddMMyy')}"
        CONTAINER_IMAGE = 'CONTAINER_IMAGE'
        KUBEMANIFEST_DIR = 'kubemanifest_aks/'
        DEPLOYMENT_FILE = '01-deployment.yml'
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scmGit(branches: [[name: '*/master']], userRemoteConfigs: [[credentialsId: 'github_credentials', url: "${GIT_REPO_URL}"]])
            }
        }
        stage('Docker Build and Push') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'aks-acr-creds', url: 'http://myacr123test.azurecr.io') {
                        sh "docker build -t $DOCKER_REGISTRY/$DOCKER_IMAGE:$IMAGE_TAG ."
                        sh "docker push $DOCKER_REGISTRY/$DOCKER_IMAGE:$IMAGE_TAG"
                    }
                }
            }
        }
        stage ('Update Kubernetes Manifest and Deploy') {
            steps {
                script {
                    def newImageName = "$DOCKER_REGISTRY/$DOCKER_IMAGE:$IMAGE_TAG"
                    sh("sed -i 's|${CONTAINER_IMAGE}|${newImageName}|' $KUBEMANIFEST_DIR$DEPLOYMENT_FILE")

                    withKubeConfig(credentialsId: 'aks-config') {
                        sh ('kubectl apply -f $KUBEMANIFEST_DIR')
                    }
                }
            }
        }
    } 
}
